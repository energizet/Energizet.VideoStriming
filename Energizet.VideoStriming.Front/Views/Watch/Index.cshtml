@{
	ViewData["Title"] = "Watch";
}

<div id="root"></div>
<script>

	let root = document.getElementById('root');
	let id;

	(async () => {
		let params = new URLSearchParams(location.search);
		id = params.get('id');

		let video = await fetch(`//localhost:7099/api/VideoInfo/${id}`).then(d => d.json());
		let videoTag = createVideoTag(video.data);
		render(video.data, videoTag);
	})();

	function changeQuality({ target }, videoTag){
		let time = videoTag.currentTime;
		let source = videoTag.querySelector('source');
		source.src = `//localhost:7099/api/Download/${id}/${target.value}`;
		videoTag.load();
		videoTag.play();
		videoTag.currentTime = time;
	}

	function render(video, videoTag){
		root.addCustomElement('div', {class: ['d-flex', 'flex-column', 'gap-2'], children: [
			//['video', {class: 'bg-black', controls: true, src: URL.createObjectURL(mediaSource)}],
			videoTag,
			//['video', {class: 'bg-black', controls: true, src: 'https://localhost:7046/videos/source1.mp4'}],
			['select', {on: {change: (e) => changeQuality(e, videoTag)}, children: video.qualitys.map(quality => 
				['option', {id: quality, innerText: quality}]
			)}],
			['div', {innerText: video.name}],
			['div', {innerText: video.discription}],
		]});
	}

	function createVideoTag(video){
		return document.createCustomElement('video', {class: 'bg-black', controls: true, children: [
				['source', {src: (video.qualitys.length > 0 ? `//localhost:7099/api/Download/${id}/${video.qualitys.sort((l, r) => l>r?1:-1)[0]}` : ''), type: 'video/mp4'}],
			]});
	}
</script>